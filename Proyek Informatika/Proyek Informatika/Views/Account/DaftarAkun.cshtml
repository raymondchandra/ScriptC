@{
    ViewBag.Title = "DaftarAkun";
}

<script type="text/javascript">
    function Grid_onComplete(e) {
        if (e.name == "Aktivasi") {
            if (e.response.success == true) $("#DaftarAkun .t-refresh").trigger("click");
            else alert("Gagal mengubah status");
        }
        else if (e.name == "Reset_Password") 
        {
            if (e.response.success == true) alert("Berhasil mereset password");
            else alert("Gagal mereset password");
        }
    }
</script>

<div class="layer">
    <h1>Daftar Akun</h1>

    <!--GRID AKUN-->
    @(Html.Telerik().Grid<Proyek_Informatika.Models.AlbertContainer.AkunForGrid>()
        .HtmlAttributes(new { style = "width:100%" })
        .Name("DaftarAkun")
        .ClientEvents(events => events.OnComplete("Grid_onComplete"))
        .DataBinding(dataBinding => dataBinding.Ajax()
                                            .Select("_SelectAkun", "Account")
                                            .Insert("_InsertAkun", "Account")
                                            .Update("_SaveAkun", "Account")
                                            .Delete("_DeleteAkun", "Account"))
        .Columns(columns =>
        {
            columns.Bound(o => o.username).Width(100).Title("Username");
            columns.Bound(o => o.peran).Width(100).Title("Peran");
            columns.Bound(o => o.aktif).Width(70).Title("Aktif");            
            columns.Bound(o => o.last_login).Width(100).Title("Last Login");
            columns.Command(commands => commands
                .Custom("Aktivasi")
                .Text("Ubah status")
                .Ajax(true)
                .Action("Change_Status", "Account")
                .DataRouteValues(route => { route.Add(a => a.username).RouteKey("username"); })).Width(100);
            columns.Command(commands => commands
                .Custom("Reset_Password")
                .Text("Reset password")
                .Ajax(true)
                .Action("Reset_Password", "Account")
                .DataRouteValues(route => { route.Add(a => a.username).RouteKey("username"); })).Width(150);
        })
            //.ClientEvents(
            //    events => events
            //        .OnComplete("OnComplete") --> popup window
            //)
        .Pageable(p => p.PageSize(15))
        .Sortable()
        .Filterable()
            //.Editable(editing => editing.Mode(GridEditMode.PopUp))
        .Scrollable(c => c.Enabled(true))
        .Selectable()
        .Groupable()
    )
</div>
