<script src="../../../Scripts/schedular/dhtmlxscheduler.js" type="text/javascript"></script>
<script src="../../../Scripts/schedular/ext/dhtmlxscheduler_grid_view.js" type="text/javascript"></script>
<script src="../../../Scripts/schedular/ext/dhtmlxscheduler_limit.js" type="text/javascript" charset="utf-8"></script>
<link href="../../../Scripts/schedular/dhtmlxscheduler_glossy.css" rel="stylesheet" type="text/css" />
<script src="../../../Scripts/schedular/ext/dhtmlxscheduler_readonly.js" type="text/javascript" charset="utf-8"></script>

@{
    ViewBag.Title = "Lihat Jadwal Sidang";
    int[] start = new int[3];
    int[] end = new int[3];
    if (ViewBag.exist)
    {
        start = ViewBag.start_date as int[];
        end = ViewBag.end_date as int[];
    }else{
        
        for (int i = 0; i < 3; i++)
        {
            start[i] = 0;
            end[i] = 0;
        }
    }

    
}

<script type="text/javascript" charset="utf-8">

    function init() {
        scheduler.config.xml_date = "%Y-%m-%d %H:%i";
		scheduler.config.first_hour = 7;
		scheduler.config.last_hour = 17;
        scheduler.config.multi_day = false;
        scheduler.blockTime(0, "fullday");
        scheduler.blockTime(6, "fullday");
		scheduler.config.full_day = true;
		var day = @start[0];
        for (var i = 0; i < 7; i++) {
            day--;
            scheduler.blockTime(new Date(@start[2], @start[1]-1, day), "fullday");
        }
		
        //scheduler.config.readonly_form = true;
        scheduler.attachEvent("onBeforeDrag", function () { return false; }); //block event resize and drag
        scheduler.attachEvent("onClick", function () { return false; }); //block selection menus
        scheduler.config.dblclick_create = false; //block event creation by doubleclick
        $(".dhx_close_icon").hide();

        scheduler.createGridView({
            fields: [
                { id: "text",  label:'NPM', sort:'str'},
                { id: "nama",  label:'Nama', sort:'str'},
                { id: "date",  label:'Tanggal', sort:'date'},
                { id: "ruang" ,label:'Ruang', sort:'str'},
                { id: "pembimbing" ,label:'Pembimbing', sort:'str'},
                { id: "penguji1" ,label:'Penguji 1', sort:'str'},
                { id: "penguji2" ,label:'Penguji 2', sort:'str'},
				{ id: "description" ,label:'Deskripsi'}
                
				//ruang penguji dll
            ], 
            @{
                if (ViewBag.exist)
                {
                    <text>
                        from:new Date(@start[2], @start[1]-1, @start[0]),
                        to:new Date(@end[2], @end[1]-1, @end[0])
                    </text>
                }
            
            }
        });
        scheduler.locale.labels.grid_tab = "Tabel";

        //label
        scheduler.locale.labels.section_text = 'Title';
        scheduler.locale.labels.section_description = 'Deskripsi';
        scheduler.locale.labels.section_ruang = 'Ruang';

        scheduler.attachEvent("onBeforeLightbox", function (event_id) {
            var configLb = [
			            { name: "text", height: 30, map_to: "text", type: "textarea", focus: true },
                        { name: "description", height: 75, map_to: "description", type: "textarea" },
                        { name: "ruang", height: 30, map_to: "ruang", type: "textarea" },
                        { name: "time", height: 72, type: "calendar_time", map_to: "auto" }
		            ];
            scheduler.config.lightbox.sections = configLb;
            scheduler.resetLightbox(); // resetting lightbox to apply new section label
            return true; // lightbox will be displayed
        });
   
        scheduler.original_prev = scheduler._click.dhx_cal_prev_button;
        scheduler._click.dhx_cal_prev_button = function () {
            if (prev_limit_check()) {
                scheduler.original_next(0,-1);
            } else {
                alert("Tidak dapat memperlihatkan di luar batas jadwal sidang.");
            }
        };
        scheduler.original_next = scheduler._click.dhx_cal_next_button;
        scheduler._click.dhx_cal_next_button = function () {
            if (next_limit_check()) {
                scheduler.original_next();
            } else {
                alert("Tidak dapat memperlihatkan di luar batas jadwal sidang.");
            }
        };

        scheduler.init('scheduler_here', new Date(@start[2], @start[1]-1, @start[0]), "week");
        var values = {
            periode : '@ViewBag.periode',
            tipe : '@ViewBag.tipe'
        };
        
        $.post("SidangKoordinator/Data", values, function (data) {
            scheduler.parse(JSON.stringify(data), "json");
        });
    }

    function prev_limit_check(){
        var date = $(".dhx_cal_date").html();
        var split = date.split(' ');
        var monthIdx = this.getMonthIndex(split[1]);
        var first = new Date(split[2], monthIdx, split[0]);
        var limitStart = new Date(@start[2], @start[1]-1, @start[0]);
        if(+first<=+limitStart){
            return false;
        }else{
            return true;
        }
        
    }

    function next_limit_check(){
        var date = $(".dhx_cal_date").html();
        var split = date.split(' ');
        var last = new Date();
        if(split.length == 3){
            var monthIdx = this.getMonthIndex(split[1]);
            last = new Date(split[2], monthIdx, split[0]);
        }else{
            var monthIdx = this.getMonthIndex(split[5]);
            last = new Date(split[6], monthIdx, split[4]);
        }
        
        var limitEnd = new Date(@end[2], @end[1]-1, @end[0]);
        if(+last>= +limitEnd){
            return false;
        }else{
            return true;
        }
    }


    function getMonthIndex(month){
        switch(month){
            case "Jan" : return 0; break;
            case "Feb" : return 1; break;
            case "Mar" : return 2; break;
            case "Apr" : return 3; break;
            case "May" : return 4; break;
            case "Jun" : return 5; break;
            case "Jul" : return 6; break;
            case "Aug" : return 7; break;
            case "Sep" : return 8; break;
            case "Oct" : return 9; break;
            case "Nov" : return 10; break;
            case "Dec" : return 11; 
        }
    }
    $(document).ready(function () {
        @{
            if (ViewBag.exist)
            {
                <text>
                    init();
                </text>
            }
            else
            {
                <text>
                    var text = "<p>Jadwal Belum tersedia. bacot dulu...</p>";
                    $("#jadwal").html(text);
                </text>
            }
        }
        
    });
</script>


<div style="overflow:hidden;">
<div id="scheduler_here" class="dhx_cal_container" style='padding-top=10px; height:500px;'>
<div class="dhx_cal_navline">
	<div class="dhx_cal_prev_button">&nbsp;</div>
	<div class="dhx_cal_next_button">&nbsp;</div>
	<div class="dhx_cal_today_button"></div>
	<div class="dhx_cal_date"></div>
	<div class="dhx_cal_tab dhx_cal_tab_first" name="day_tab" style="right:14px;"></div>
	<div class="dhx_cal_tab" name="week_tab" style="right:75px;"></div>
    <div class="dhx_cal_tab" name="grid_tab" style="right:137px;"></div>
</div>
<div class="dhx_cal_header">
</div>
<div class="dhx_cal_data">
</div>
</div>
</div>
