@{
    ViewBag.Title = "Topik";
}
<script type="text/javascript">

    function onCommand(e) {
        if (e.name == "lihatDetail") {
            var text = "<table class='window-content'>";
            text += "<tr><td class='label'>Topik</td><td>:</td><td>" + e.row.cells[1].innerHTML + "</td></tr>";
            text += "<tr><td class='label'>Deskripsi</td><td>:</td><td>" + e.row.cells[2].innerHTML + "</td></tr>";
            text += "<tr><td class='label'>Pembimbing</td><td>:</td><td>" + e.row.cells[3].innerHTML + "</td></tr>";
            text += "<tr><td class='label'>Keterangan</td><td>:</td><td>" + e.row.cells[4].innerHTML + "</td></tr>";
            text += "</table>";
            $(".detail").html(text);
            var windowZ = $("#topikDetail").data("tWindow");
            windowZ.center().open();
        }
        else if (e.name == "editDetail") {
            $("#id").val(e.row.cells[0].innerHTML);
            $("#judul").val(e.row.cells[1].innerHTML);
            $("#deskripsi").val(e.row.cells[2].innerHTML);
            var windowZ = $("#topikUpdate").data("tWindow");
            windowZ.center().open();
        }
    } 
</script>
<div class="layer">
    <h1>
        Topik</h1>
    @{var login = (string)Session["role"];
      if (login == "dosen")
      { 
            
        <script type="text/javascript">
            $("#insert").click(function () {
                var values = {
                    judul: $("#topik-judul").val(),
                    deskripsi: $("#topik-deskripsi").val()
                };
                $.post("Home/_InsertTopik", values, function (data) {
                    alert(data);
                });
                $('#content').load('Home/TopikAdmin');
            })
        </script>
                
        <fieldset>
            <legend>Registrasi Topik</legend>
            <div class="editor-label grid_15">
                <label>
                    Topik</label>
            </div>
            <br class="clear" />
            <div class="editor-field grid_15">
                <input id="topik-judul" name="judul" type="text" value="" class="grid_10" />
            </div>
            <br class="clear" />
            <div class="editor-label grid_15">
                <label>
                    Deskripsi</label>
            </div>
            <br class="clear" />
            <div class="editor-field grid_15">
                <textarea cols="" id="topik-deskripsi" name="deskripsi" rows="" class="grid_10"></textarea>
            </div>
            <div class="button-block grid_15">
                <input type="button" id="insert" value="Register" class="t-button t-state-default" /></div>
        </fieldset>                   
      }    
    }
    @{ 
        GridEditMode mode = GridEditMode.InLine;
        GridButtonType type = GridButtonType.Text;    
    }
    @(Html.Telerik().Grid<Proyek_Informatika.Models.TopikContainer>()
        .HtmlAttributes(new { style = "width:100%" })
        .Name("topik")
        .DataKeys(keys =>
        {
            keys.Add(k => k.id);
        })
        .DataBinding(dataBinding => dataBinding.Ajax()
            .Select("_SelectTopik", "Home")
            .Delete("_DeleteTopik", "Home"))
            .DetailView(det => det.ClientTemplate(
               "<fieldset class='detail'>" +
               "<legend>Deskripsi</legend>" +
               "<div><#= deskripsi #>" +
               "</div>" +
               "</fieldset>"
           ))
        .Columns(columns =>
        {
            columns.Bound(c => c.id).Hidden();
            columns.Bound(c => c.judul).Width(300).Title("Topik");
            columns.Bound(c => c.deskripsi).Hidden();
            columns.Bound(c => c.pembimbing).Width(150).Title("Pembimbing");
            columns.Bound(c => c.keterangan).Width(150).Title("Keterangan");
            columns.Command(c =>
            {
                //c.Custom("lihatDetail").Ajax(true).Text("Detail");
                c.Custom("editDetail").Ajax(true).Text("Edit");
                c.Delete().ButtonType(type);
            }).Width(200);
        })
        .ClientEvents(ev => ev.OnCommand("onCommand").OnComplete("onCommand"))
        .Editable(editing => editing.Mode(mode))
        .Pageable(p => p.PageSize(15))
        .Scrollable(c => c.Enabled(true))
        .Sortable()
        .Filterable()
        .Selectable()
        .Groupable()
    )
    @(Html.Telerik().Window()
        .Name("topikDetail")
        .Title("Topik")
        .Visible(false)
        .Modal(true)
        .Width(500)
        .Height(300)
        .Scrollable(true)
        .Content(@<text> <span class="detail"></span></text>)
    )
    @(Html.Telerik().Window()
        .Name("topikUpdate")
        .Title("Edit")
        .Visible(false)
        .Modal(true)
        .Width(500)
        .Height(300)
        .Scrollable(true)
        .LoadContentFrom("TopikUpdate", "Home")
    )
    @section HeadContent {
        <style type="text/css">
    /*--------------------validators--------------------*/
    .field-validation-error
    {
        position: absolute;
        display: block;
    }
    
    * html .field-validation-error { position: relative; }
    *+html .field-validation-error { position: relative; }    
    .field-validation-error span
    {
        position: absolute;
        white-space: nowrap;
        color: red;
        padding: 17px 5px 3px;
        background: transparent url('@Url.Content("~/Content/Common/validation-error-message.png") ') no-repeat 0 0;
    }
    
    /*--------------------in-form editing--------------------*/
    .t-edit-form-container
    {
        width: 350px;
        margin: 1em;
    }    
    .t-edit-form-container .editor-label,
    .t-edit-form-container .editor-field
    {
        padding-bottom: 1em;
        float: left;
    }    
    .t-edit-form-container .editor-label
    {
        width: 30%;
        text-align: right;
        padding-right: 3%;
        clear: left;
    }    
    .t-edit-form-container .editor-field
    {
        width: 60%;
    }
</style>
    }
</div>
